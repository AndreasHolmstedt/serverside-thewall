{"ast":null,"code":"import _classCallCheck from \"/Users/andreasholmstedt/Desktop/SKOLA/TheWall/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andreasholmstedt/Desktop/SKOLA/TheWall/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andreasholmstedt/Desktop/SKOLA/TheWall/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andreasholmstedt/Desktop/SKOLA/TheWall/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andreasholmstedt/Desktop/SKOLA/TheWall/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andreasholmstedt/Desktop/SKOLA/TheWall/client/src/components/Wall/Wall.js\";\nimport React, { Component } from 'react';\nimport like from './icons8-thumbs-up-50.png';\nimport likeFilled from './icons8-thumbs-up-filled-50.png';\nimport smallLike from './icons8-thumbs-up-48.png';\nimport './Wall.css';\nvar API = 'http://localhost:4000/api/statuses/';\n\nvar Wall =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Wall, _Component);\n\n  function Wall(props) {\n    var _this;\n\n    _classCallCheck(this, Wall);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Wall).call(this, props));\n\n    _this.matchStatusUser = function () {\n      var statusList = [];\n      var users = _this.props.users;\n      var statuses = _this.state.apiStatus; // For every user\n\n      for (var i = 0; i < users.length; i++) {\n        // For every user, for every status\n        for (var e = 0; e < statuses.length; e++) {\n          // If the user is the author of a status\n          if (users[i]._id === statuses[e].author) {\n            var timeSince = function timeSince(date) {\n              var seconds = Math.floor((new Date() - date) / 1000);\n              var interval = Math.floor(seconds / 31536000);\n\n              if (interval >= 1) {\n                return interval + \" years ago\";\n              }\n\n              interval = Math.floor(seconds / 2592000);\n\n              if (interval >= 1) {\n                return interval + \" months ago\";\n              }\n\n              interval = Math.floor(seconds / 86400);\n\n              if (interval >= 1) {\n                return interval + \" days ago\";\n              }\n\n              interval = Math.floor(seconds / 3600);\n\n              if (interval >= 1) {\n                return interval + \" h ago\";\n              }\n\n              interval = Math.floor(seconds / 60);\n\n              if (interval >= 1) {\n                return interval + \" min ago\";\n              }\n\n              return \" just now\";\n            };\n\n            // Add User name + Lastname + Email + Avatar etc to the status\n            var convTime = Date.parse(statuses[e].timestamp); //Converts the timesamp in statuses to \"unix timestamp\"\n\n            var compare = new Date(Date.now() - convTime); //Compares the time when it was posted with todays date/time\n\n            var status = {\n              name: \"\".concat(users[i].first_name, \" \").concat(users[i].last_name),\n              email: users[i].email,\n              text: statuses[e].text,\n              time: statuses[e].timestamp,\n              author: statuses[e].author,\n              timeAgo: timeSince(new Date(Date.now() - compare)),\n              _id: statuses[e]._id,\n              image: users[i].url,\n              likes: statuses[e].likes //Func that tells how long ago status was posted\n\n            };\n            statusList.push(status);\n          }\n        }\n      }\n\n      _this.setState({\n        matchedStatus: statusList.sort(function (a, b) {\n          return new Date(b.time) - new Date(a.time);\n        })\n      });\n    };\n\n    _this.enableEdit = function (data) {\n      _this.setState({\n        editStatus: data._id,\n        edit: true,\n        text: data.text\n      });\n    };\n\n    _this.disableEdit = function () {\n      _this.setState({\n        editStatus: 0,\n        edit: false,\n        text: \"\"\n      });\n    };\n\n    _this.deleteStatus = function (data) {\n      fetch(\"http://localhost:4000/api/status/\" + data._id, {\n        method: \"DELETE\"\n      }).then(function (res) {\n        return res.json();\n      }).then(function (msg) {\n        _this.fetchStatuses();\n\n        console.log(msg);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      _this.setState({\n        text: event.target.value\n      });\n    };\n\n    _this.handleTextAreaChange = function (event) {\n      _this.setState({\n        textArea: event.target.value\n      });\n    };\n\n    _this.commitChange = function (data) {\n      console.log(data);\n      console.log(_this.state.matchedStatus);\n\n      var newData = _this.state.matchedStatus.map(function (status) {\n        if (status._id === data._id) {\n          status.text = _this.state.text;\n          return status;\n        } else {\n          return status;\n        }\n      });\n\n      _this.setState({\n        matchedStatus: newData\n      });\n\n      fetch(\"http://localhost:4000/api/status/\" + data._id, {\n        method: \"GET\"\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        console.log(data);\n      });\n\n      _this.disableEdit();\n    };\n\n    _this.putStatus = function () {\n      fetch(\"http://localhost:4000/api/status?text=\" + _this.state.textArea + \"&author=\" + _this.state.user._id, {\n        method: \"PUT\"\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this.fetchStatuses();\n      });\n    };\n\n    _this.likeStatus = function (status) {\n      fetch(\"http://localhost:4000/api/status/likes/\" + status._id + \"/\" + _this.props.user._id, {\n        method: \"PUT\"\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this.fetchStatuses();\n      });\n    };\n\n    _this.dislikeStatus = function (status) {\n      fetch(\"http://localhost:4000/api/status/dislikes/\" + status._id + \"/\" + _this.props.user._id, {\n        method: \"PUT\"\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this.fetchStatuses();\n      });\n    };\n\n    _this.state = {\n      user: _this.props.user,\n      apiStatus: [],\n      matchedStatus: [],\n      editStatus: 0,\n      edit: false,\n      text: \"\",\n      textArea: \"\",\n      like: true\n    };\n    return _this;\n  }\n\n  _createClass(Wall, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchStatuses();\n    }\n  }, {\n    key: \"fetchStatuses\",\n    value: function fetchStatuses() {\n      var _this2 = this;\n\n      fetch(API + this.state.user._id).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this2.setState({\n          apiStatus: data\n        }, function () {\n          _this2.matchStatusUser();\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var list = this.state.matchedStatus.map(function (data) {\n        return React.createElement(\"div\", {\n          key: data._id,\n          className: \"statusContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"userInfoCard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"imageHeader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"userImage\",\n          style: {\n            backgroundImage: \"url(\".concat(data.image, \")\")\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"userNameTime\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, data.name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, data.timeAgo))), React.createElement(\"div\", {\n          className: \"info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, _this3.state.user._id === data.author ? React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"infoDots\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, \"...\"), React.createElement(\"div\", {\n          className: \"options\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this3.enableEdit(data);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this3.deleteStatus(data);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, \"Delete\"))) : null)), React.createElement(\"div\", {\n          className: \"statusText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, _this3.state.editStatus === data._id && _this3.state.edit ? React.createElement(\"div\", {\n          className: \"edit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          value: _this3.state.text,\n          onChange: _this3.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this3.commitChange(data);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, \"Save\"), React.createElement(\"button\", {\n          className: \"discard\",\n          onClick: _this3.disableEdit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, \"Discard\")) : React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, data.text)), React.createElement(\"div\", {\n          className: \"likeContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"likeNumber\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: smallLike,\n          alt: \"smallLike\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, data.likes.length)), React.createElement(\"div\", {\n          className: \"likeDiv\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, !data.likes.includes(_this3.state.user._id) ? React.createElement(\"img\", {\n          className: \"likeImg\",\n          onClick: function onClick() {\n            return _this3.likeStatus(data);\n          },\n          src: like,\n          alt: \"like\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }) : React.createElement(\"img\", {\n          className: \"likeImg\",\n          onClick: function onClick() {\n            return _this3.dislikeStatus(data);\n          },\n          src: likeFilled,\n          alt: \"dislike\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, \"Like\"))));\n      });\n      return React.createElement(\"div\", {\n        className: \"wallContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"createStatusContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"optionCreate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Status\")), React.createElement(\"textarea\", {\n        className: \"textAreaStatus\",\n        placeholder: \"What's up?\",\n        value: this.state.textArea,\n        onChange: this.handleTextAreaChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"postButtonContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"settingsButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Settings\"), React.createElement(\"button\", {\n        onClick: this.putStatus,\n        className: \"postButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"Post\"))), list);\n    }\n  }]);\n\n  return Wall;\n}(Component);\n\nexport default Wall;","map":{"version":3,"sources":["/Users/andreasholmstedt/Desktop/SKOLA/TheWall/client/src/components/Wall/Wall.js"],"names":["React","Component","like","likeFilled","smallLike","API","Wall","props","matchStatusUser","statusList","users","statuses","state","apiStatus","i","length","e","_id","author","timeSince","date","seconds","Math","floor","Date","interval","convTime","parse","timestamp","compare","now","status","name","first_name","last_name","email","text","time","timeAgo","image","url","likes","push","setState","matchedStatus","sort","a","b","enableEdit","data","editStatus","edit","disableEdit","deleteStatus","fetch","method","then","res","json","msg","fetchStatuses","console","log","handleInputChange","event","target","value","handleTextAreaChange","textArea","commitChange","newData","map","putStatus","user","likeStatus","dislikeStatus","response","list","backgroundImage","includes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport like from './icons8-thumbs-up-50.png';\nimport likeFilled from './icons8-thumbs-up-filled-50.png';\nimport smallLike from './icons8-thumbs-up-48.png';\n\nimport './Wall.css';\n\nconst API = 'http://localhost:4000/api/statuses/';\n\n\nclass Wall extends Component {\n    constructor(props){\n        super(props);\n\n        this.state={\n            user: this.props.user,\n            apiStatus: [],\n            matchedStatus: [],\n            editStatus: 0,\n            edit: false,\n            text: \"\",\n            textArea: \"\",\n            like: true,\n        }\n    }\n\n    componentDidMount() {\n        this.fetchStatuses();\n    }\n\n    matchStatusUser = () => {\n        let statusList = [];\n        let users = this.props.users;\n        let statuses = this.state.apiStatus;\n\n        // For every user\n        for (let i = 0; i < users.length; i++ ) {\n            // For every user, for every status\n            for (let e = 0; e < statuses.length; e++) {\n                // If the user is the author of a status\n                if (users[i]._id === statuses[e].author){\n                    // Add User name + Lastname + Email + Avatar etc to the status\n\n                    let convTime = Date.parse(statuses[e].timestamp) //Converts the timesamp in statuses to \"unix timestamp\"\n                    let compare = new Date(Date.now()- convTime) //Compares the time when it was posted with todays date/time\n\n                    let status = {\n                        name: `${users[i].first_name} ${users[i].last_name}`,\n                        email: users[i].email,\n                        text: statuses[e].text,\n                        time: statuses[e].timestamp,\n                        author: statuses[e].author,\n                        timeAgo: timeSince(new Date(Date.now() - compare)),\n                        _id: statuses[e]._id,\n                        image: users[i].url,\n                        likes: statuses[e].likes\n                    }\n                    //Func that tells how long ago status was posted\n                    function timeSince(date) {\n\n                      var seconds = Math.floor((new Date() - date) / 1000);\n\n                      var interval = Math.floor(seconds / 31536000);\n\n                      if (interval >= 1) {\n                        return interval + \" years ago\";\n                      }\n                      interval = Math.floor(seconds / 2592000);\n                      if (interval >= 1) {\n                        return interval + \" months ago\";\n                      }\n                      interval = Math.floor(seconds / 86400);\n                      if (interval >= 1) {\n                        return interval + \" days ago\";\n                      }\n                      interval = Math.floor(seconds / 3600);\n                      if (interval >= 1) {\n                        return interval + \" h ago\";\n                      }\n                      interval = Math.floor(seconds / 60);\n                      if (interval >= 1) {\n                        return interval + \" min ago\";\n                      }\n                      return \" just now\";\n                    }\n                    statusList.push(status);\n                }\n            }\n        }\n        this.setState(\n            {\n                matchedStatus: statusList.sort(function(a,b){\n                    return new Date(b.time) - new Date(a.time);\n                })\n            }\n        )\n    }\n\n\n    fetchStatuses(){\n        fetch(API + this.state.user._id)\n        .then(response => response.json())\n        .then(data => this.setState({\n            apiStatus: data\n        }, () => {\n                this.matchStatusUser();\n            })\n        )\n    }\n\n    enableEdit = data => {\n        this.setState({ editStatus: data._id, edit: true, text: data.text })\n    }\n\n    disableEdit = () => {\n        this.setState({ editStatus: 0, edit: false, text: \"\" })\n    }\n\n    deleteStatus = data => {\n        fetch(\"http://localhost:4000/api/status/\" + data._id, { method: \"DELETE\" })\n        .then(res => res.json())\n        .then(msg => {\n            this.fetchStatuses()\n            console.log(msg)\n        })\n    }\n\n    handleInputChange = event => {\n        this.setState({ text: event.target.value })\n    }\n\n    handleTextAreaChange = event => {\n        this.setState({ textArea: event.target.value})\n    }\n\n    commitChange = data => {\n        console.log(data)\n        console.log(this.state.matchedStatus)\n\n        let newData = this.state.matchedStatus.map( status => {\n            if(status._id === data._id) {\n                status.text = this.state.text\n                return status\n            }\n            else {\n                return status\n            }\n        })\n\n        this.setState({ matchedStatus: newData })\n\n        fetch(\"http://localhost:4000/api/status/\" + data._id, { method: \"GET\" })\n        .then(res => res.json())\n        .then( data => {\n            console.log(data)\n        })\n\n        this.disableEdit()\n    }\n\n    putStatus = () => {\n        fetch(\"http://localhost:4000/api/status?text=\" + this.state.textArea + \"&author=\" + this.state.user._id, { method: \"PUT\" })\n        .then(res => res.json())\n        .then( data => {\n            this.fetchStatuses()\n        })\n    }\n\n    likeStatus = status => {\n        fetch(\"http://localhost:4000/api/status/likes/\" + status._id + \"/\"+ this.props.user._id, { method: \"PUT\" })\n        .then(res => res.json())\n        .then( data => {\n            this.fetchStatuses()\n        })\n\n    }\n\n    dislikeStatus = status => {\n        fetch(\"http://localhost:4000/api/status/dislikes/\" + status._id + \"/\"+ this.props.user._id, { method: \"PUT\" })\n        .then(res => res.json())\n        .then( data => {\n            this.fetchStatuses()\n        })\n    }\n\n\n    render() {\n        const list = this.state.matchedStatus.map(data =>\n            <div key={data._id} className=\"statusContainer\">\n                <div className=\"userInfoCard\">\n                    <div className=\"imageHeader\">\n                        <div className=\"userImage\" style={{backgroundImage: `url(${data.image})`}}></div>\n                        <div className=\"userNameTime\">\n                            <h4>{data.name}</h4>\n                            <p>{data.timeAgo}</p>\n                        </div>\n                    </div>\n                    <div className=\"info\">\n                    { this.state.user._id === data.author ?\n                      <React.Fragment>\n                        <button className=\"infoDots\">...</button>\n                        <div className=\"options\">\n                            <button onClick={() => this.enableEdit(data)}>Edit</button>\n                            <button onClick={() => this.deleteStatus(data)}>Delete</button>\n                        </div>\n                      </React.Fragment>\n                        : null\n                    }\n                    </div>\n                </div>\n                <div className=\"statusText\">\n                    { this.state.editStatus === data._id && this.state.edit\n                        ?   <div className=\"edit\">\n                                <input type=\"text\" value={this.state.text} onChange={this.handleInputChange} />\n                                <button onClick={() => this.commitChange(data)}>Save</button>\n                                <button className=\"discard\" onClick={this.disableEdit}>Discard</button>\n                            </div>\n                        : <p>{data.text}</p>\n                    }\n                </div>\n                <div className=\"likeContainer\">\n\n                    <div className=\"likeNumber\">\n                        <img src={smallLike} alt=\"smallLike\"/>\n                        <p>{data.likes.length}</p>\n                    </div>\n                    <div className=\"likeDiv\">\n                        { !data.likes.includes(this.state.user._id) ?\n                            <img className=\"likeImg\" onClick={() => this.likeStatus(data)} src={like} alt=\"like\"/>\n                            : <img className=\"likeImg\" onClick={() => this.dislikeStatus(data)} src={likeFilled} alt=\"dislike\"/>\n                        }\n                        <p>Like</p>\n                    </div>\n                </div>\n            </div>\n        );\n        return (\n            <div className=\"wallContainer\">\n                <div className=\"createStatusContainer\">\n                <div className=\"optionCreate\"><p>Status</p></div>\n                <textarea className=\"textAreaStatus\" placeholder=\"What's up?\" value={this.state.textArea} onChange={this.handleTextAreaChange} />\n                <div className=\"postButtonContainer\">\n                    <button className=\"settingsButton\">Settings</button>\n                    <button onClick={this.putStatus} className=\"postButton\">Post</button>\n                </div>\n                </div>\n                {list}\n            </div>\n        );\n    }\n}\n\nexport default Wall;\n"]},"metadata":{},"sourceType":"module"}